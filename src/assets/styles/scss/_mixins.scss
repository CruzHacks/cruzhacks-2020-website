/* mixins.scss */

// ============================================================================
// Media Queries
// ============================================================================

@mixin respond($breakpoint) {
  @if ($breakpoint == phone-narrow) {
    @media (max-width: 25em) {
      @content;
    }
  }

  @if ($breakpoint == phone) {
    @media (max-width: 37.5em) {
      @content;
    }
  }

  @if ($breakpoint == tab-port) {
    @media (max-width: 56.25em) {
      @content;
    }
  }

  @if ($breakpoint == tab-land) {
    @media (max-width: 75em) {
      @content;
    }
  }

  @if ($breakpoint == mission) {
    @media (max-width: 99em) {
      @content;
    }
  }

  @if ($breakpoint == big-desktop) {
    @media (min-width: 112.5em) {
      @content;
    }
  }
}

// =============================================================================
// String Replace (https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6)
// =============================================================================

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

// =============================================================================
// Font Face (https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6)
// =============================================================================

@mixin font-face(
  $name,
  $path,
  $weight: null,
  $style: null,
  $exts: eot woff2 woff ttf svg
) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_'),
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype',
  );

  @each $ext in $exts {
    $extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append(
      $src,
      url(quote($path + '.' + $extmod)) format(quote($format)),
      comma
    );
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// ============================================================================
// Body Font Source
// ============================================================================

@mixin font-source-body(
  $size: false,
  $color: false,
  $weight: false,
  $lineHeight: false,
  $letterSpace: false
) {
  @if ($size) {
    font-size: $size;
  }
  @if ($color) {
    color: $color;
  }
  @if ($weight) {
    font-weight: $weight;
  }
  @if ($lineHeight) {
    line-height: $lineHeight;
  }
  @if ($letterSpace) {
    letter-spacing: $letterSpace;
  }
}

// ============================================================================
// Subheader Font Source
// ============================================================================

@mixin font-source-subheader(
  $size: false,
  $color: false,
  $weight: false,
  $lineHeight: false,
  $letterSpace: false
) {
  font-family: AvenirBook;
  @if ($size) {
    font-size: $size;
  }
  @if ($color) {
    color: $color;
  }
  @if ($weight) {
    font-weight: $weight;
  }
  @if ($lineHeight) {
    line-height: $lineHeight;
  }
  @if ($letterSpace) {
    letter-spacing: $letterSpace;
  }
}

// ============================================================================
// Header Font Source
// ============================================================================

@mixin font-source-header(
  $size: false,
  $color: false,
  $weight: false,
  $lineHeight: false,
  $letterSpace: false
) {
  font-family: Rubik;
  @if ($size) {
    font-size: $size;
  }
  @if ($color) {
    color: $color;
  }
  @if ($weight) {
    font-weight: $weight;
  }
  @if ($lineHeight) {
    line-height: $lineHeight;
  }
  @if ($letterSpace) {
    letter-spacing: $letterSpace;
  }
}

// ============================================================================
// Responsive SVG
// ============================================================================

@mixin svgContainer() {
  display: inline-block;
  position: relative;
  width: 100%;
  padding-bottom: 100%;
  vertical-align: middle;
  overflow: hidden;
}

.responsive-svg-container {
  @include svgContainer();
}

@mixin svgContent() {
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
}

.responsive-svg-content {
  @include svgContent();
}

// ============================================================================
// Flex Containers
// ============================================================================

@mixin flexBox() {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-box {
  @include flexBox();
}

@mixin flexRow() {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
}

.flex-row {
  @include flexRow();
}

@mixin flexColumn() {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: space-between;
}

.flex-column {
  @include flexColumn();
}
